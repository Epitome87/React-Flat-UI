{"version":3,"sources":["colorHelpers.js","styles/PaletteStyles.jsx","styles/ColorBoxStyles.jsx","components/ColorBox.jsx","styles/NavbarStyles.jsx","components/Navbar.jsx","styles/PaletteFooterStyles.jsx","components/PaletteFooter.jsx","components/SingleColorPalette.jsx","styles/sizes.js"],"names":["levels","generatePalette","starterPalette","newPalette","paletteName","id","emoji","colors","level","hexColor","numberOfColors","color","scale","chroma","end","darken","hex","getRange","mode","reverse","i","push","name","toLowerCase","replace","rgb","css","rgba","styles","Palette","height","display","flexDirection","PaletteColors","overflow","goBack","width","margin","position","marginBottom","opacity","backgroundColor","top","left","transform","textAlign","outline","fontFamily","fontSize","lineHeight","textTransform","border","textDecoration","transition","sizes","down","ColorBox","props","showingFullPalette","cursor","copyText","background","luminance","colorName","seeMore","right","bottom","copyButton","borderRadius","boxContent","padding","letterSpacing","copyOverlay","zIndex","showOverlay","copyMessage","alignItems","justifyContent","visibility","fontWeight","textShadow","marginBttom","showCopyMessage","transitionProperty","withStyles","colorBoxStyles","paletteId","classes","useState","isCopied","setIsCopied","text","onCopy","setTimeout","className","style","classNames","to","onClick","event","stopPropagation","Navbar","NavbarLogo","marginRight","NavbarSlider","boxShadow","marginLeft","marginTop","SliderContainer","NavbarSelectContainer","navbarStyles","changeLevel","changeFormat","showingAllColors","format","setFormat","isOpenSnackbar","setIsOpenSnackbar","closeSnackbar","defaultValue","min","max","step","onAfterChange","Select","value","onChange","target","renderValue","selected","formatText","toUpperCase","sx","fill","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","ContentProps","action","IconButton","PaletteFooter","PaletteFooterEmoji","paletteFooterStyles","palette","paletteStyles","palettes","params","useParams","find","renderedShades","targetColor","shades","key","concat","filter","slice","getShades","colorId","map","shade","formatValue","up","size","sm","md","lg","xs","xl"],"mappings":"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","file":"static/js/9.2b3fd123.chunk.js","sourcesContent":["import chroma from 'chroma-js';\r\n\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette) {\r\n  const newPalette = {\r\n    paletteName: starterPalette.paletteName,\r\n    id: starterPalette.id,\r\n    emoji: starterPalette.emoji,\r\n    colors: {},\r\n  };\r\n\r\n  for (let level of levels) {\r\n    newPalette.colors[level] = [];\r\n  }\r\n\r\n  for (let color of starterPalette.colors) {\r\n    const scale = getScale(color.color, 10).reverse();\r\n    for (let i in scale) {\r\n      newPalette.colors[levels[i]].push({\r\n        name: `${color.name} ${levels[i]}`,\r\n        id: color.name.toLowerCase().replace(/ /g, '-'),\r\n        hex: scale[i],\r\n        rgb: chroma(scale[i]).css(),\r\n        rgba: chroma(scale[i])\r\n          .css()\r\n          .replace('rgb', 'rgba')\r\n          .replace(')', ',1.0)'),\r\n      });\r\n    }\r\n  }\r\n\r\n  return newPalette;\r\n}\r\n\r\nfunction getRange(hexColor) {\r\n  const end = '#fff';\r\n\r\n  // Return array with the darkened color as 1st element, base color as 2nd, and white as the 3rd\r\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\r\n\r\n  // Why this? When using chroma scale, using black as one of the endpoints of the scale resulted in colors that were too dark. So instead of black we just call .darken(1.4) on the color we want the range of: color.darkeN(1.4) -> base color -> white\r\n}\r\n\r\nfunction getScale(hexColor, numberOfColors) {\r\n  return chroma.scale(getRange(hexColor)).mode('lab').colors(numberOfColors);\r\n}\r\n\r\nexport { generatePalette };\r\n","import sizes from './sizes';\r\n\r\nconst styles = {\r\n  Palette: {\r\n    height: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  PaletteColors: {\r\n    height: '90%',\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  goBack: {\r\n    width: '20%',\r\n    height: '50%',\r\n    margin: '0 auto',\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    marginBottom: '-3.5px',\r\n    opacity: 1,\r\n    backgroundColor: 'black',\r\n\r\n    '& a': {\r\n      color: 'white',\r\n      width: '100px',\r\n      height: '30px',\r\n      position: 'absolute',\r\n      display: 'inline-block',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      textAlign: 'center',\r\n      outline: 'none',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n      fontFamily: 'inherit',\r\n      fontSize: '1rem',\r\n      lineHeight: '30px',\r\n      textTransform: 'uppercase',\r\n      border: 'none',\r\n      textDecoration: 'none',\r\n      transition: 'opacity 0.5s linear',\r\n    },\r\n\r\n    [sizes.down('lg')]: {\r\n      width: '75%',\r\n      height: '33.3333%',\r\n    },\r\n\r\n    [sizes.down('md')]: {\r\n      width: '50%',\r\n      height: '20%',\r\n    },\r\n\r\n    [sizes.down('xs')]: {\r\n      width: '100%',\r\n      height: '10%',\r\n    },\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import { withThemeCreator } from '@mui/styles';\r\nimport chroma from 'chroma-js';\r\nimport sizes from './sizes';\r\n\r\nconst styles = {\r\n  ColorBox: {\r\n    width: '20%',\r\n    height: (props) => (props.showingFullPalette ? '25%' : '50%'),\r\n    margin: '0 auto',\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n    marginBottom: '-3.5px',\r\n\r\n    // This works for applying to our copyButton, since it is the only button in ColorBox\r\n    // But this is just a janky workaround to not being able to target .copyButton from here!\r\n    '&:hover button': {\r\n      opacity: '1',\r\n    },\r\n\r\n    [sizes.down('lg')]: {\r\n      width: '25%',\r\n      height: (props) => (props.showingFullPalette ? '20%' : '33.3333%'),\r\n    },\r\n\r\n    [sizes.down('md')]: {\r\n      width: '50%',\r\n      height: (props) => (props.showingFullPalette ? '10%' : '20%'),\r\n    },\r\n\r\n    [sizes.down('xs')]: {\r\n      width: '100%',\r\n      height: (props) => (props.showingFullPalette ? '5%' : '10%'),\r\n    },\r\n  },\r\n\r\n  copyText: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() >= 0.07 ? 'black' : 'white',\r\n  },\r\n\r\n  colorName: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() <= 0.08\r\n        ? 'white'\r\n        : 'rgba(0, 0, 0, 0.6)',\r\n  },\r\n\r\n  seeMore: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() >= 0.7\r\n        ? 'rgba(0, 0, 0, 0.6)'\r\n        : 'white',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    position: 'absolute',\r\n    border: 'none',\r\n    right: '0px',\r\n    bottom: '0px',\r\n    width: '60px',\r\n    height: '30px',\r\n    textAlign: 'center',\r\n    lineHeight: '30px',\r\n    textTransform: 'uppercase',\r\n  },\r\n\r\n  copyButton: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() >= 0.7 ? 'rgba(0,0,0,0.6)' : 'white',\r\n    width: '100px',\r\n    height: '40px', //'30px',\r\n    position: 'absolute',\r\n    display: 'inline-block',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    textAlign: 'center',\r\n    outline: 'none',\r\n    backgroundColor: 'transparent', //'rgba(255, 255, 255, 0.3)',\r\n    fontFamily: 'inherit',\r\n    fontSize: '1.2rem',\r\n    lineHeight: '30px',\r\n    textTransform: 'uppercase',\r\n    border: '2px solid rgba(255, 255, 255, 0.8)', //'none',\r\n    opacity: '0',\r\n    textDecoration: 'none',\r\n    transition: 'opacity 0.5s linear',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n\r\n  boxContent: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    left: '0px',\r\n    bottom: '0px',\r\n    padding: '10px',\r\n    color: 'black',\r\n    letterSpacing: '1px',\r\n    textTransform: 'uppercase',\r\n    fontSize: '0.8rem',\r\n  },\r\n\r\n  copyOverlay: {\r\n    opacity: '0',\r\n    zIndex: '0',\r\n    width: ' 100%',\r\n    height: ' 100%',\r\n    transition: 'transform 0.6s ease-in-out',\r\n    transform: 'scale(0.1)',\r\n  },\r\n\r\n  showOverlay: {\r\n    opacity: '1',\r\n    transform: 'scale(50)',\r\n    zIndex: '10',\r\n    position: 'absolute',\r\n  },\r\n\r\n  copyMessage: {\r\n    position: 'fixed',\r\n    left: '0',\r\n    right: '0',\r\n    top: '0',\r\n    bottom: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '4rem',\r\n    transform: 'scale(0.1)',\r\n    opacity: '0',\r\n    color: 'white',\r\n    /* Fixes a bug where the last ColorBox in a Palette had its copy-msg element blocking the center ColorBox from being clicked */\r\n    visibility: 'hidden',\r\n\r\n    '& h1': {\r\n      fontWeight: '400',\r\n      textShadow: '1px 2px black',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      marginBttom: '0',\r\n      padding: '1rem',\r\n      textTransform: 'uppercase',\r\n\r\n      [sizes.down('xs')]: {\r\n        fontSize: '6rem',\r\n      },\r\n    },\r\n\r\n    '& p': {\r\n      fontSize: '2rem',\r\n      fontWeight: '100',\r\n    },\r\n  },\r\n\r\n  showCopyMessage: {\r\n    opacity: '1',\r\n    transform: 'scale(1)',\r\n    zIndex: '25',\r\n    transition: 'all 0.4s ease-in-out 0.5s',\r\n    transitionProperty: 'opacity, transform, z-index',\r\n    /* Fixes a bug where the last ColorBox in a Palette had its copy-msg element blocking the center ColorBox from being clicked  */\r\n    visibility: 'visible',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // Easy Clipboard functionality\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@mui/styles';\r\nimport colorBoxStyles from '../styles/ColorBoxStyles';\r\nimport classNames from 'classnames';\r\n\r\nconst ColorBox = ({\r\n  background,\r\n  name,\r\n  id,\r\n  paletteId,\r\n  showingFullPalette,\r\n  classes,\r\n}) => {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const changeCopyState = () => {\r\n    setIsCopied(true);\r\n\r\n    // Set copy back to false after a few moments\r\n    // TODO: useEffect for this?\r\n    setTimeout(() => {\r\n      setIsCopied(false);\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    // Wrap in CopyToClipBoard, which will copy the value of background when Component is clicked\r\n    <CopyToClipboard text={background} onCopy={changeCopyState}>\r\n      <div className={classes.ColorBox} style={{ background }}>\r\n        <div\r\n          className={classNames(classes.copyOverlay, {\r\n            [classes.showOverlay]: isCopied,\r\n          })}\r\n          style={{ background }}\r\n        />\r\n        <div\r\n          className={classNames(classes.copyMessage, {\r\n            [classes.showCopyMessage]: isCopied,\r\n          })}\r\n        >\r\n          <h1>Copied!</h1>\r\n          <p className={classes.copyText}>{background}</p>\r\n        </div>\r\n        <div>\r\n          <div className={classes.boxContent}>\r\n            <span className={classes.colorName}>{name}</span>\r\n          </div>\r\n          <button className={classes.copyButton}>Copy</button>\r\n        </div>\r\n        {showingFullPalette && (\r\n          <Link\r\n            to={`/palette/${paletteId}/${id}`}\r\n            onClick={(event) => event.stopPropagation()}\r\n          >\r\n            <span className={classes.seeMore}>MORE</span>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </CopyToClipboard>\r\n  );\r\n};\r\n\r\nexport default withStyles(colorBoxStyles)(ColorBox);\r\n","import sizes from './sizes';\r\n\r\nconst styles = {\r\n  Navbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    height: '6vh',\r\n  },\r\n\r\n  NavbarLogo: {\r\n    marginRight: '15px',\r\n    padding: '0 13px',\r\n    fontSize: '1.25rem',\r\n    backgroundColor: '#eceff1',\r\n    fontFamily: 'Roboto, sans-serif',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n\r\n    '& a': {\r\n      textDecoration: 'none',\r\n      color: 'black',\r\n    },\r\n\r\n    [sizes.down('xs')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  NavbarSlider: {\r\n    width: '300px', //'340px',\r\n    margin: '0 10px',\r\n    display: 'inline-block',\r\n\r\n    '& .rc-slider-track': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n\r\n    '& .rc-slider-rail': {\r\n      height: '8px',\r\n    },\r\n\r\n    '& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus .rc-slider-handle:hover':\r\n      {\r\n        backgroundColor: 'blue',\r\n        outline: 'none',\r\n        border: '2px solid blue',\r\n        boxShadow: 'none',\r\n        width: '1rem',\r\n        height: '1rem',\r\n        marginLeft: '-7px',\r\n        marginTop: '-3px',\r\n      },\r\n\r\n    [sizes.down('sm')]: {\r\n      width: '150px',\r\n    },\r\n  },\r\n\r\n  SliderContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    // justifyContent: 'center',\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    // margin: '0.3rem 1rem 0.3rem 1rem',\r\n    padding: '1rem',\r\n    borderRadius: '5px',\r\n    height: '50px',\r\n  },\r\n\r\n  NavbarSelectContainer: {\r\n    margin: '0.3rem 1rem 0.3rem auto',\r\n    padding: '1rem 2rem',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Select, MenuItem, Snackbar, IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { makeStyles, withStyles } from '@mui/styles';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport navbarStyles from '../styles/NavbarStyles';\r\n\r\nfunction Navbar({\r\n  level,\r\n  changeLevel,\r\n  changeFormat,\r\n  showingAllColors,\r\n  classes,\r\n}) {\r\n  const [format, setFormat] = useState('hex');\r\n  const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\r\n\r\n  const handleFormatChange = (event) => {\r\n    setFormat(event.target.value);\r\n\r\n    // Call Palette component's format handler\r\n    changeFormat(event.target.value);\r\n\r\n    setIsOpenSnackbar(true);\r\n  };\r\n\r\n  const closeSnackbar = () => {\r\n    setIsOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <header className={classes.Navbar}>\r\n      <div className={classes.NavbarLogo}>\r\n        <Link to='/'>&#x2B05; Back</Link>\r\n      </div>\r\n      {showingAllColors && (\r\n        <div className={classes.SliderContainer}>\r\n          <span>Level: {level}</span>\r\n          <div className={classes.NavbarSlider}>\r\n            <Slider\r\n              defaultValue={level}\r\n              min={100}\r\n              max={900}\r\n              step={100}\r\n              onAfterChange={changeLevel}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className={classes.NavbarSelectContainer}>\r\n        <Select\r\n          value={format}\r\n          onChange={handleFormatChange}\r\n          renderValue={(selected) => {\r\n            let formatText = '';\r\n            if (selected === 'hex') formatText = '(#010203)';\r\n            if (selected === 'rgb') formatText = '- (1, 2, 3)';\r\n            if (selected === 'rgba') formatText = '- (1, 2, 3, 0.4)';\r\n            return `Copy Format: ${selected.toUpperCase()} ${formatText.toUpperCase()}`;\r\n          }}\r\n          sx={{\r\n            color: 'white',\r\n            backgroundColor: 'black',\r\n            height: '50px',\r\n            // padding: '1rem 2rem',\r\n\r\n            // Not the proper way to target dropdown arrow, but whatever!\r\n            '& svg': {\r\n              color: 'white',\r\n              fill: 'white',\r\n            },\r\n          }}\r\n        >\r\n          <MenuItem value='hex'>HEX (#010203)</MenuItem>\r\n          <MenuItem value='rgb'>RGB - (1, 2, 3)</MenuItem>\r\n          <MenuItem value='rgba'>RGBA - (1, 2, 3, 0.4)</MenuItem>\r\n        </Select>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        open={isOpenSnackbar}\r\n        autoHideDuration={3000}\r\n        onClose={closeSnackbar}\r\n        message={\r\n          <span id='message-id'>Format changed to {format.toUpperCase()}</span>\r\n        }\r\n        ContentProps={{ 'aria-describedby': 'message-id' }}\r\n        action={[\r\n          <IconButton\r\n            onClick={closeSnackbar}\r\n            color='inherit'\r\n            key='close'\r\n            aria-label='close'\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default withStyles(navbarStyles)(Navbar);\r\n","const styles = {\r\n  PaletteFooter: {\r\n    backgroundColor: 'white',\r\n    height: '5vh',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  PaletteFooterEmoji: {\r\n    fontSize: '1.5rem',\r\n    margin: '0 1rem',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport { withStyles } from '@mui/styles';\r\nimport paletteFooterStyles from '../styles/PaletteFooterStyles';\r\n\r\nfunction PaletteFooter({ palette, classes }) {\r\n  return (\r\n    <footer className={classes.PaletteFooter}>\r\n      {palette.paletteName}\r\n      <span className={classes.PaletteFooterEmoji}>{palette.emoji}</span>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default withStyles(paletteFooterStyles)(PaletteFooter);\r\n","import React, { useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { withStyles } from '@mui/styles';\r\nimport { generatePalette } from '../colorHelpers';\r\nimport ColorBox from './ColorBox';\r\nimport Navbar from './Navbar';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport paletteStyles from '../styles/PaletteStyles';\r\n\r\nfunction SingleColorPalette({ palettes, classes }) {\r\n  const [format, setFormat] = useState('hex');\r\n  const params = useParams();\r\n\r\n  function findPalette(id) {\r\n    return palettes.find((palette) => palette.id === id);\r\n  }\r\n\r\n  // Generate the palette based on the URL\r\n  const palette = generatePalette(findPalette(params.paletteId));\r\n  const shades = getShades(params.colorId);\r\n\r\n  // Returns all shades of given color\r\n  function getShades(targetColor) {\r\n    let shades = [];\r\n\r\n    for (let key in palette.colors) {\r\n      shades = shades.concat(\r\n        palette.colors[key].filter((color) => {\r\n          return color.id === targetColor;\r\n        })\r\n      );\r\n    }\r\n    // Return the shades array sans the 1st element, which is our screwy \"50\" level\r\n    return shades.slice(1);\r\n  }\r\n\r\n  const handleChangeFormat = (formatValue) => {\r\n    setFormat(formatValue);\r\n  };\r\n\r\n  const renderedShades = shades.map((shade) => {\r\n    return (\r\n      <ColorBox\r\n        key={shade.name}\r\n        name={shade.name}\r\n        background={shade[format]}\r\n        showingFullPalette={false}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Palette}>\r\n      <Navbar changeFormat={handleChangeFormat} showingAllColors={false} />\r\n      <div className={classes.PaletteColors}>\r\n        {renderedShades}\r\n        <div className={classes.goBack}>\r\n          <Link to={`/palette/${params.paletteId}`}>GO BACK</Link>\r\n        </div>\r\n      </div>\r\n      <PaletteFooter palette={palette} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(paletteStyles)(SingleColorPalette);\r\n","const sizes = {\r\n  up(size) {\r\n    const sizes = {\r\n      sx: '575.98px',\r\n      sm: '767.98px',\r\n      md: '991.98px',\r\n      lg: '119.98px',\r\n    };\r\n\r\n    return `@media (min-width: ${sizes[size]})`;\r\n  },\r\n\r\n  down(size) {\r\n    const sizes = {\r\n      xs: '575.98px',\r\n      sm: '767.98px',\r\n      md: '991.98px',\r\n      lg: '1119.98px',\r\n      xl: '1600px',\r\n    };\r\n\r\n    return `@media (max-width: ${sizes[size]})`;\r\n  },\r\n};\r\n\r\nexport default sizes;\r\n"],"sourceRoot":""}